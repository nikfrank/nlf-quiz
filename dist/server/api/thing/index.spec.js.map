{"version":3,"sources":["../../../../server/api/thing/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAb;;AAEJ,IAAI,gBAAgB;AAClB,SAAO,iBAAP;AACA,QAAM,gBAAN;AACA,UAAQ,kBAAR;AACA,UAAQ,kBAAR;AACA,WAAS,mBAAT;CALE;;AAQJ,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EAAL;AACA,OAAK,MAAM,GAAN,EAAL;AACA,SAAO,MAAM,GAAN,EAAP;AACA,QAAM,MAAM,GAAN,EAAN;AACA,UAAQ,MAAM,GAAN,EAAR;CALE;;;AASJ,IAAI,aAAa,WAAW,YAAX,EAAyB;AACxC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP,CADiB;KAAX;GADV;AAKA,wBAAsB,aAAtB;CANe,CAAb;;AASJ,SAAS,mBAAT,EAA8B,YAAW;;AAEvC,KAAG,0CAAH,EAA+C,YAAW;AACxD,eAAW,MAAX,CAAkB,KAAlB,CAAwB,UAAxB,EADwD;GAAX,CAA/C,CAFuC;;AAMvC,WAAS,iBAAT,EAA4B,YAAW;;AAErC,OAAG,wCAAH,EAA6C,YAAW;AACtD,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,iBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADsD;KAAX,CAA7C,CAFqC;GAAX,CAA5B,CANuC;;AAgBvC,WAAS,qBAAT,EAAgC,YAAW;;AAEzC,OAAG,uCAAH,EAA4C,YAAW;AACrD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,gBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADqD;KAAX,CAA5C,CAFyC;GAAX,CAAhC,CAhBuC;;AA0BvC,WAAS,kBAAT,EAA6B,YAAW;;AAEtC,OAAG,yCAAH,EAA8C,YAAW;AACvD,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,kBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADuD;KAAX,CAA9C,CAFsC;GAAX,CAA7B,CA1BuC;;AAoCvC,WAAS,qBAAT,EAAgC,YAAW;;AAEzC,OAAG,yCAAH,EAA8C,YAAW;AACvD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,kBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADuD;KAAX,CAA9C,CAFyC;GAAX,CAAhC,CApCuC;;AA8CvC,WAAS,uBAAT,EAAkC,YAAW;;AAE3C,OAAG,yCAAH,EAA8C,YAAW;AACvD,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,kBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADuD;KAAX,CAA9C,CAF2C;GAAX,CAAlC,CA9CuC;;AAwDvC,WAAS,wBAAT,EAAmC,YAAW;;AAE5C,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,mBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADwD;KAAX,CAA/C,CAF4C;GAAX,CAAnC,CAxDuC;CAAX,CAA9B","file":"index.spec.js","sourcesContent":["'use strict';\r\n\r\nvar proxyquire = require('proxyquire').noPreserveCache();\r\n\r\nvar thingCtrlStub = {\r\n  index: 'thingCtrl.index',\r\n  show: 'thingCtrl.show',\r\n  create: 'thingCtrl.create',\r\n  update: 'thingCtrl.update',\r\n  destroy: 'thingCtrl.destroy'\r\n};\r\n\r\nvar routerStub = {\r\n  get: sinon.spy(),\r\n  put: sinon.spy(),\r\n  patch: sinon.spy(),\r\n  post: sinon.spy(),\r\n  delete: sinon.spy()\r\n};\r\n\r\n// require the index with our stubbed out modules\r\nvar thingIndex = proxyquire('./index.js', {\r\n  'express': {\r\n    Router: function() {\r\n      return routerStub;\r\n    }\r\n  },\r\n  './thing.controller': thingCtrlStub\r\n});\r\n\r\ndescribe('Thing API Router:', function() {\r\n\r\n  it('should return an express router instance', function() {\r\n    thingIndex.should.equal(routerStub);\r\n  });\r\n\r\n  describe('GET /api/things', function() {\r\n\r\n    it('should route to thing.controller.index', function() {\r\n      routerStub.get\r\n        .withArgs('/', 'thingCtrl.index')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('GET /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.show', function() {\r\n      routerStub.get\r\n        .withArgs('/:id', 'thingCtrl.show')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('POST /api/things', function() {\r\n\r\n    it('should route to thing.controller.create', function() {\r\n      routerStub.post\r\n        .withArgs('/', 'thingCtrl.create')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PUT /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.update', function() {\r\n      routerStub.put\r\n        .withArgs('/:id', 'thingCtrl.update')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('PATCH /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.update', function() {\r\n      routerStub.patch\r\n        .withArgs('/:id', 'thingCtrl.update')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n  describe('DELETE /api/things/:id', function() {\r\n\r\n    it('should route to thing.controller.destroy', function() {\r\n      routerStub.delete\r\n        .withArgs('/:id', 'thingCtrl.destroy')\r\n        .should.have.been.calledOnce;\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}